import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const COMPONENTS_DIR = path.join(__dirname, '../src/components');
const OUTPUT_FILE = path.join(COMPONENTS_DIR, 'componentsMap.jsx');

const files = fs
  .readdirSync(COMPONENTS_DIR)
  .filter((file) => file.endsWith('.jsx') && file !== 'componentsMap.jsx');

const imports = [];
const mappings = [];

files.forEach((file) => {
  const componentName = path.basename(file, '.jsx');
  imports.push(`import ${componentName} from './${file}';`);
  mappings.push(`  "${componentName}": ${componentName},`);
});

const content = `// Auto-generated by generateComponentMap.js
${imports.join('\n')}

const componentsMap = {
${mappings.join('\n')}
};

export default componentsMap;
`;

fs.writeFileSync(OUTPUT_FILE, content);
console.log('âœ… componentsMap.jsx generated!');
